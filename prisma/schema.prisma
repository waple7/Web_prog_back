// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  password  String
  email     String    @unique
  createdAt DateTime  @default(now())
  vacancys     Vacancy[]
  services  Service[]
  contacts Contact[]
}

model Service {
  id        Int       @id @default(autoincrement())
  title     String
  service   String
  createdAt DateTime  @default(now())
  customer    User      @relation(fields: [userId], references: [id])
  userId  Int
  listService ListServices[]
}
model ListServices {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  title   String
  myService       Service         @relation(fields: [serviceId], references: [id])
  serviceId     Int
}

model Vacancy {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  author    User      @relation(fields: [vacancyId], references: [id])
  vacancyId  Int
  tegVacancy TegsVacancy[]
}

model TegsVacancy {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  title     String
  myService     Vacancy         @relation(fields: [tegId], references: [id])
  tegId     Int
}

model Contact{
  id        Int       @id @default(autoincrement())
  email   String
  role      String
  createdAt DateTime  @default(now())
  author    User      @relation(fields: [userId], references: [id])
  userId  Int
}
